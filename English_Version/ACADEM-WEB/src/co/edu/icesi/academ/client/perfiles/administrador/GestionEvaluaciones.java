package co.edu.icesi.academ.client.perfiles.administrador;

import java.text.SimpleDateFormat;
import java.util.List;

import co.edu.icesi.academ.bo.EvaluacionBO;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Property.ValueChangeEvent;
import com.vaadin.data.Property.ValueChangeListener;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Table;

public class GestionEvaluaciones extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private Button buttonEditarEvaluacion;
	@AutoGenerated
	private Button botonCrearEvaluacion;
	@AutoGenerated
	private Table tablaGestionEvaluaciones;
	private static final long serialVersionUID = 1L;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public GestionEvaluaciones() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// User code
		
		tablaGestionEvaluaciones.addContainerProperty("ID", Integer.class, null);
		tablaGestionEvaluaciones.addContainerProperty("Start Date", String.class, null);
		tablaGestionEvaluaciones.addContainerProperty("Finish Date", String.class, null);
		tablaGestionEvaluaciones.addContainerProperty("Program", String.class, null);
		tablaGestionEvaluaciones.addContainerProperty("Owner", String.class, null);

		// Allow selecting items from the table.
		tablaGestionEvaluaciones.setSelectable(true);
		
		// Send changes in selection immediately to server.
		tablaGestionEvaluaciones.setImmediate(true);
		
		this.botonCrearEvaluacion.addClickListener(new ClickListener() {
			
			private static final long serialVersionUID = 1L;

			@Override
			public void buttonClick(ClickEvent event) {
				crearEvaluacion();
			}
		});
		
		this.tablaGestionEvaluaciones.addValueChangeListener(new ValueChangeListener() {
			private static final long serialVersionUID = 1L;

			@Override
			public void valueChange(ValueChangeEvent event) {
				if (tablaGestionEvaluaciones.getValue() != null) {
					buttonEditarEvaluacion.setEnabled(true);
				} else {
					buttonEditarEvaluacion.setEnabled(false);
				}
			}
		});
		
		// El botón de editar permanece deshabilitado hasta que se seleccione una evaluación
		this.buttonEditarEvaluacion.setEnabled(false);
		this.buttonEditarEvaluacion.addClickListener(new ClickListener() {

			private static final long serialVersionUID = 1L;

			@Override
			public void buttonClick(ClickEvent event) {
				editarEvaluacion();
			}
			
		});
	}

	protected void editarEvaluacion() {
		EvaluacionBO evaluacion = (EvaluacionBO) tablaGestionEvaluaciones.getValue();
		ControladorAdministrador.getInstance().mostrarFormularioCrearEditarEvaluacion(evaluacion);
	}

	protected void crearEvaluacion() {
		ControladorAdministrador.getInstance().mostrarFormularioCrearEditarEvaluacion(null);
	}

	public void cargarEvaluaciones(List<EvaluacionBO> evaluaciones) {
		tablaGestionEvaluaciones.removeAllItems();
				
		if (evaluaciones != null) {
			SimpleDateFormat dateFormat = new SimpleDateFormat ("dd-MM-yyyy");
			for (EvaluacionBO evaluacion : evaluaciones) {
				tablaGestionEvaluaciones.addItem(new Object[]{ evaluacion.getId(), dateFormat.format(evaluacion.getFechaInicial()), dateFormat.format(evaluacion.getFechaFinal()), evaluacion.getPrograma().getNombre(), evaluacion.getPropietario().getNombre() }, evaluacion);
			}
		}
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// tablaGestionEvaluaciones
		tablaGestionEvaluaciones = new Table();
		tablaGestionEvaluaciones.setImmediate(false);
		tablaGestionEvaluaciones.setWidth("100.0%");
		tablaGestionEvaluaciones.setHeight("100.0%");
		mainLayout.addComponent(tablaGestionEvaluaciones,
				"top:57.0px;right:20.0px;bottom:20.0px;left:20.0px;");
		
		// botonCrearEvaluacion
		botonCrearEvaluacion = new Button();
		botonCrearEvaluacion.setCaption("Create Survey");
		botonCrearEvaluacion.setImmediate(true);
		botonCrearEvaluacion.setWidth("-1px");
		botonCrearEvaluacion.setHeight("-1px");
		mainLayout
				.addComponent(botonCrearEvaluacion, "top:14.0px;left:20.0px;");
		
		// buttonEditarEvaluacion
		buttonEditarEvaluacion = new Button();
		buttonEditarEvaluacion.setCaption("Edit Survey");
		buttonEditarEvaluacion.setImmediate(false);
		buttonEditarEvaluacion.setWidth("-1px");
		buttonEditarEvaluacion.setHeight("-1px");
		mainLayout.addComponent(buttonEditarEvaluacion,
				"top:14.0px;left:160.0px;");
		
		return mainLayout;
	}

}
